include required(classpath("application"))

akka {
  # Optionally set / override any akka settings
  http {
    server {
      # Increasing these timeouts allow rest api responses for very large jobs
      # to be returned to the user. When the timeout is reached the server would respond
      # `The server was not able to produce a timely response to your request.`
      # https://gatkforums.broadinstitute.org/wdl/discussion/10209/retrieving-metadata-for-large-workflows
      request-timeout = 10m
      # idle-timeout = 20s
    }
  }
}

system {
  job-rate-control {
    jobs = 20
    per = 10 seconds
  }

  max-workflow-launch-count = 50
  new-workflow-poll-rate = 1
}

google {
  application-name = "cromwell"
  auths = [
    {
      name = "application-default"
      scheme = "application_default"
    }
  ]
}

engine {
  filesystems {
    gcs {
      auth = "application-default"
      project = "batch-testing-350715"
    }
  }
}

backend {
  default = batch
  providers {
    batch {
      actor-factory = "cromwell.backend.google.batch.GcpBatchBackendLifecycleActorFactory"
      config {
        // Google project
        project = "batch-testing-350715"

        // Base bucket for workflow executions
        root = "gs://cromwell-29292/cromwell-execution"

        // dockers entry point
        job-shell = "/bin/sh"

        use_reference_disks = false

        // Polling for completion backs-off gradually for slower-running jobs.
        // This is the maximum polling interval (in seconds):
        maximum-polling-interval = 600

        request-workers = 3


        virtual-private-cloud {
           network-name =  "projects/batch-testing-350715/global/networks/my-custom-network"
           subnetwork-name = "projects/batch-testing-350715/regions/us-central1/subnetworks/central2-subnet"
        }

        genomics {
          // A reference to an auth defined in the `google` stanza at the top.  This auth is used to create
          // Pipelines and manipulate auth JSONs.
          auth = "application-default"

          // Endpoint for APIs, which defaults to us-central1. To run with a location different from us-central1,
          // change the endpoint-url to start with the location, such as https://europe-west2-lifesciences.googleapis.com/
          endpoint-url = "https://lifesciences.googleapis.com/"

          // This allows you to use an alternative service account to launch jobs, by default uses default service account
          compute-service-account = "default"

          // Cloud Life Sciences API is limited to certain locations. See https://cloud.google.com/life-sciences/docs/concepts/locations
          // and note that changing the location also requires changing the endpoint-url.
          location = "us-central1"

          // Pipelines v2 only: specify the number of times localization and delocalization operations should be attempted
          // There is no logic to determine if the error was transient or not, everything is retried upon failure
          // Defaults to 3
          localization-attempts = 3
        }

        filesystems {
          gcs {
            // A reference to a potentially different auth for manipulating files via engine functions.
            auth = "application-default"
            project = "batch-testing-350715"
          }
        }
      }
    }
  }
}